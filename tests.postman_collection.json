{
	"info": {
		"_postman_id": "fe59918b-6fad-454c-aeb8-74a5bce0ce0b",
		"name": "Homework 5",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Test Scenario",
			"item": [
				{
					"name": "Initial logout",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/auth/api/v1/logout",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"api",
								"v1",
								"logout"
							]
						}
					},
					"response": [
						{
							"name": "successfull response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/logout",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"logout"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "unexpected error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/logout",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"logout"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 7570250,\n \"message\": \"ad dolor\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "User1",
			"item": [
				{
					"name": "Register",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"const schema = {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"id\": {",
									"            \"type\": \"string\"",
									"        }",
									"    },",
									"    \"required\": [\"id\"]",
									"};",
									"",
									"pm.test('Response schema is valid', function() {",
									"    pm.response.to.have.jsonSchema(schema);",
									"});",
									"",
									"var responseJSON = JSON.parse(responseBody)",
									"pm.collectionVariables.set(\"userId\", responseJSON[\"id\"])"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"login\", pm.variables.replaceIn('{{$randomUserName}}'))",
									"pm.collectionVariables.set(\"password\", pm.variables.replaceIn('{{$randomPassword}}'))"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"login\": \"{{login}}\",\n    \"password\": \"{{password}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/auth/api/v1/register",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"api",
								"v1",
								"register"
							]
						}
					},
					"response": [
						{
							"name": "successfull response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"login\": \"user1\",\n    \"password\": \"user1-pwd\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/register",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"register"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"urn:uuid:75f05586-ccca-6fb5-cfce-373267b7ab4f\"\n}"
						},
						{
							"name": "unexpected error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"login\": \"user1\",\n    \"password\": \"user1-pwd\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/register",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"register"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 7570250,\n \"message\": \"ad dolor\"\n}"
						}
					]
				},
				{
					"name": "Register with same login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"login\": \"{{login}}\",\n    \"password\": \"{{password}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/auth/api/v1/register",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"api",
								"v1",
								"register"
							]
						}
					},
					"response": [
						{
							"name": "successfull response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"login\": \"user1\",\n    \"password\": \"user1-pwd\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/register",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"register"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"urn:uuid:75f05586-ccca-6fb5-cfce-373267b7ab4f\"\n}"
						},
						{
							"name": "unexpected error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"login\": \"user1\",\n    \"password\": \"user1-pwd\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/register",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"register"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 7570250,\n \"message\": \"ad dolor\"\n}"
						}
					]
				},
				{
					"name": "Get current user id without login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrl}}/user/api/v1/user",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"api",
								"v1",
								"user"
							]
						}
					},
					"response": [
						{
							"name": "successfull response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/user",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"58437f97-054d-590b-28c6-24a43fa722b8\"\n}"
						},
						{
							"name": "forbidden response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/user",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 44250960,\n \"message\": \"qui cupidatat esse reprehenderit\"\n}"
						},
						{
							"name": "unexpected error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/user",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 44250960,\n \"message\": \"qui cupidatat esse reprehenderit\"\n}"
						}
					]
				},
				{
					"name": "Get user profile without login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrl}}/user/api/v1/user/:userId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"api",
								"v1",
								"user",
								":userId"
							],
							"variable": [
								{
									"key": "userId",
									"value": "{{userId}}",
									"description": "(Required) ID of user"
								}
							]
						}
					},
					"response": [
						{
							"name": "user response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/:userId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										":userId"
									],
									"variable": [
										{
											"key": "userId",
											"value": "urn:uuid:0dcea8f3-1851-bfa8-810c-a681b53532b8",
											"description": "(Required) ID of user"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"16211162-809a-be7a-f035-f6c1446a0ace\",\n \"login\": \"in occaecat Ut con\",\n \"firstName\": \"laborum consectetur\",\n \"lastName\": \"ullamco occaecat nostrud ut\",\n \"email\": \"0fpTANSpQ@JjUAxIHyYVMxeQmjOkmcHuFxBqaWf.ryu\",\n \"phone\": \"commodo cillum nisi\"\n}"
						},
						{
							"name": "forbidden response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/:userId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										":userId"
									],
									"variable": [
										{
											"key": "userId",
											"value": "urn:uuid:0dcea8f3-1851-bfa8-810c-a681b53532b8",
											"description": "(Required) ID of user"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 44250960,\n \"message\": \"qui cupidatat esse reprehenderit\"\n}"
						},
						{
							"name": "unexpected error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/:userId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										":userId"
									],
									"variable": [
										{
											"key": "userId",
											"value": "urn:uuid:0dcea8f3-1851-bfa8-810c-a681b53532b8",
											"description": "(Required) ID of user"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 44250960,\n \"message\": \"qui cupidatat esse reprehenderit\"\n}"
						}
					]
				},
				{
					"name": "Update user profile without login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"New name\",\n    \"lastName\": \"New lastname\",\n    \"email\": \"new@email.com\",\n    \"phone\": \"+71004242424\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/user/api/v1/user/:userId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"api",
								"v1",
								"user",
								":userId"
							],
							"variable": [
								{
									"key": "userId",
									"value": "{{userId}}",
									"description": "(Required) ID of user"
								}
							]
						}
					},
					"response": [
						{
							"name": "user updated",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"firstName\": \"Julie\",\n    \"lastName\": \"Doe\",\n    \"email\": \"bestjohn@doe.com\",\n    \"phone\": \"+71004242424\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/:userId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										":userId"
									],
									"variable": [
										{
											"key": "userId",
											"value": "urn:uuid:0dcea8f3-1851-bfa8-810c-a681b53532b8",
											"description": "(Required) ID of user"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "forbidden response",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"firstName\": \"Julie\",\n    \"lastName\": \"Doe\",\n    \"email\": \"bestjohn@doe.com\",\n    \"phone\": \"+71004242424\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/:userId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										":userId"
									],
									"variable": [
										{
											"key": "userId",
											"value": "urn:uuid:0dcea8f3-1851-bfa8-810c-a681b53532b8",
											"description": "(Required) ID of user"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 44250960,\n \"message\": \"qui cupidatat esse reprehenderit\"\n}"
						},
						{
							"name": "unexpected error",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"firstName\": \"Julie\",\n    \"lastName\": \"Doe\",\n    \"email\": \"bestjohn@doe.com\",\n    \"phone\": \"+71004242424\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/:userId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										":userId"
									],
									"variable": [
										{
											"key": "userId",
											"value": "urn:uuid:0dcea8f3-1851-bfa8-810c-a681b53532b8",
											"description": "(Required) ID of user"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 44250960,\n \"message\": \"qui cupidatat esse reprehenderit\"\n}"
						}
					]
				},
				{
					"name": "Login user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"login\": \"{{login}}\",\n    \"password\": \"{{password}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/auth/api/v1/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"api",
								"v1",
								"login"
							]
						}
					},
					"response": [
						{
							"name": "successfull response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"login\": \"user1\",\n    \"password\": \"user1-pwd\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"login"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "bad request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"login\": \"user1\",\n    \"password\": \"user1-pwd\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"login"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "unexpected error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"login\": \"user1\",\n    \"password\": \"user1-pwd\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"login"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 7570250,\n \"message\": \"ad dolor\"\n}"
						}
					]
				},
				{
					"name": "Get current user id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"const schema = {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"id\": {",
									"            \"type\": \"string\"",
									"        }",
									"    },",
									"    \"required\": [\"id\"]",
									"};",
									"",
									"pm.test('Response schema is valid', function() {",
									"    pm.response.to.have.jsonSchema(schema);",
									"});",
									"",
									"pm.test('Returns current user id', function() {",
									"    var responseJSON = JSON.parse(responseBody)",
									"    pm.expect(responseJSON[\"id\"]).to.eql(pm.collectionVariables.get(\"userId\"))",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrl}}/user/api/v1/user",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"api",
								"v1",
								"user"
							]
						}
					},
					"response": [
						{
							"name": "successfull response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/user",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"58437f97-054d-590b-28c6-24a43fa722b8\"\n}"
						},
						{
							"name": "forbidden response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/user",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user"
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 44250960,\n \"message\": \"qui cupidatat esse reprehenderit\"\n}"
						},
						{
							"name": "unexpected error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/user",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 44250960,\n \"message\": \"qui cupidatat esse reprehenderit\"\n}"
						}
					]
				},
				{
					"name": "Get initial user profile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"const schema = {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"id\": {",
									"            \"type\": \"string\"",
									"        },",
									"        \"login\": {",
									"            \"type\": \"string\"",
									"        },",
									"        \"firstName\": {",
									"            \"type\": \"string\"",
									"        },",
									"        \"lastName\": {",
									"            \"type\": \"string\"",
									"        },",
									"        \"email\": {",
									"            \"type\": \"string\"",
									"        },",
									"        \"phone\": {",
									"            \"type\": \"string\"",
									"        }",
									"    },",
									"    \"required\": [\"id\", \"login\", \"firstName\", \"lastName\", \"email\", \"phone\"]",
									"};",
									"",
									"pm.test('Response schema is valid', function() {",
									"    pm.response.to.have.jsonSchema(schema);",
									"});",
									"",
									"pm.test('Initial profile data valid', function() {",
									"    var responseJSON = JSON.parse(responseBody)",
									"    pm.expect(responseJSON[\"id\"]).to.eql(pm.collectionVariables.get(\"userId\"))",
									"    pm.expect(responseJSON[\"login\"]).to.eql(pm.collectionVariables.get(\"login\"))",
									"    pm.expect(responseJSON[\"firstName\"]).empty",
									"    pm.expect(responseJSON[\"lastName\"]).empty",
									"    pm.expect(responseJSON[\"email\"]).empty",
									"    pm.expect(responseJSON[\"phone\"]).empty",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrl}}/user/api/v1/user/:userId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"api",
								"v1",
								"user",
								":userId"
							],
							"variable": [
								{
									"key": "userId",
									"value": "{{userId}}",
									"description": "(Required) ID of user"
								}
							]
						}
					},
					"response": [
						{
							"name": "user response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/:userId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										":userId"
									],
									"variable": [
										{
											"key": "userId",
											"value": "urn:uuid:0dcea8f3-1851-bfa8-810c-a681b53532b8",
											"description": "(Required) ID of user"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"16211162-809a-be7a-f035-f6c1446a0ace\",\n \"login\": \"in occaecat Ut con\",\n \"firstName\": \"laborum consectetur\",\n \"lastName\": \"ullamco occaecat nostrud ut\",\n \"email\": \"0fpTANSpQ@JjUAxIHyYVMxeQmjOkmcHuFxBqaWf.ryu\",\n \"phone\": \"commodo cillum nisi\"\n}"
						},
						{
							"name": "forbidden response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/:userId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										":userId"
									],
									"variable": [
										{
											"key": "userId",
											"value": "urn:uuid:0dcea8f3-1851-bfa8-810c-a681b53532b8",
											"description": "(Required) ID of user"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 44250960,\n \"message\": \"qui cupidatat esse reprehenderit\"\n}"
						},
						{
							"name": "unexpected error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/:userId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										":userId"
									],
									"variable": [
										{
											"key": "userId",
											"value": "urn:uuid:0dcea8f3-1851-bfa8-810c-a681b53532b8",
											"description": "(Required) ID of user"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 44250960,\n \"message\": \"qui cupidatat esse reprehenderit\"\n}"
						}
					]
				},
				{
					"name": "Update user profile",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"firstName\", pm.variables.replaceIn('{{$randomFirstName}}'))",
									"pm.collectionVariables.set(\"lastName\", pm.variables.replaceIn('{{$randomLastName}}'))",
									"pm.collectionVariables.set(\"email\", pm.variables.replaceIn('{{$randomEmail}}'))",
									"pm.collectionVariables.set(\"phone\", pm.variables.replaceIn('{{$randomPhoneNumber}}'))"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test('Response is valid', function() {",
									"    pm.expect(pm.response.text()).to.eql(\"OK\")",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"{{firstName}}\",\n    \"lastName\": \"{{lastName}}\",\n    \"email\": \"{{email}}\",\n    \"phone\": \"{{phone}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/user/api/v1/user/:userId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"api",
								"v1",
								"user",
								":userId"
							],
							"variable": [
								{
									"key": "userId",
									"value": "{{userId}}",
									"description": "(Required) ID of user"
								}
							]
						}
					},
					"response": [
						{
							"name": "user updated",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"firstName\": \"Julie\",\n    \"lastName\": \"Doe\",\n    \"email\": \"bestjohn@doe.com\",\n    \"phone\": \"+71004242424\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/:userId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										":userId"
									],
									"variable": [
										{
											"key": "userId",
											"value": "urn:uuid:0dcea8f3-1851-bfa8-810c-a681b53532b8",
											"description": "(Required) ID of user"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "forbidden response",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"firstName\": \"Julie\",\n    \"lastName\": \"Doe\",\n    \"email\": \"bestjohn@doe.com\",\n    \"phone\": \"+71004242424\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/:userId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										":userId"
									],
									"variable": [
										{
											"key": "userId",
											"value": "urn:uuid:0dcea8f3-1851-bfa8-810c-a681b53532b8",
											"description": "(Required) ID of user"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 44250960,\n \"message\": \"qui cupidatat esse reprehenderit\"\n}"
						},
						{
							"name": "unexpected error",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"firstName\": \"Julie\",\n    \"lastName\": \"Doe\",\n    \"email\": \"bestjohn@doe.com\",\n    \"phone\": \"+71004242424\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/:userId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										":userId"
									],
									"variable": [
										{
											"key": "userId",
											"value": "urn:uuid:0dcea8f3-1851-bfa8-810c-a681b53532b8",
											"description": "(Required) ID of user"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 44250960,\n \"message\": \"qui cupidatat esse reprehenderit\"\n}"
						}
					]
				},
				{
					"name": "Get user profile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"const schema = {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"id\": {",
									"            \"type\": \"string\"",
									"        },",
									"        \"login\": {",
									"            \"type\": \"string\"",
									"        },",
									"        \"firstName\": {",
									"            \"type\": \"string\"",
									"        },",
									"        \"lastName\": {",
									"            \"type\": \"string\"",
									"        },",
									"        \"email\": {",
									"            \"type\": \"string\"",
									"        },",
									"        \"phone\": {",
									"            \"type\": \"string\"",
									"        }",
									"    },",
									"    \"required\": [\"id\", \"login\", \"firstName\", \"lastName\", \"email\", \"phone\"]",
									"};",
									"",
									"pm.test('Response schema is valid', function() {",
									"    pm.response.to.have.jsonSchema(schema);",
									"});",
									"",
									"pm.test('Initial profile data valid', function() {",
									"    var responseJSON = JSON.parse(responseBody)",
									"    pm.expect(responseJSON[\"id\"]).to.eql(pm.collectionVariables.get(\"userId\"))",
									"    pm.expect(responseJSON[\"login\"]).to.eql(pm.collectionVariables.get(\"login\"))",
									"    pm.expect(responseJSON[\"firstName\"]).to.eql(pm.collectionVariables.get(\"firstName\"))",
									"    pm.expect(responseJSON[\"lastName\"]).to.eql(pm.collectionVariables.get(\"lastName\"))",
									"    pm.expect(responseJSON[\"email\"]).to.eql(pm.collectionVariables.get(\"email\"))",
									"    pm.expect(responseJSON[\"phone\"]).to.eql(pm.collectionVariables.get(\"phone\"))",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrl}}/user/api/v1/user/:userId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"api",
								"v1",
								"user",
								":userId"
							],
							"variable": [
								{
									"key": "userId",
									"value": "{{userId}}",
									"description": "(Required) ID of user"
								}
							]
						}
					},
					"response": [
						{
							"name": "user response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/:userId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										":userId"
									],
									"variable": [
										{
											"key": "userId",
											"value": "urn:uuid:0dcea8f3-1851-bfa8-810c-a681b53532b8",
											"description": "(Required) ID of user"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"16211162-809a-be7a-f035-f6c1446a0ace\",\n \"login\": \"in occaecat Ut con\",\n \"firstName\": \"laborum consectetur\",\n \"lastName\": \"ullamco occaecat nostrud ut\",\n \"email\": \"0fpTANSpQ@JjUAxIHyYVMxeQmjOkmcHuFxBqaWf.ryu\",\n \"phone\": \"commodo cillum nisi\"\n}"
						},
						{
							"name": "forbidden response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/:userId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										":userId"
									],
									"variable": [
										{
											"key": "userId",
											"value": "urn:uuid:0dcea8f3-1851-bfa8-810c-a681b53532b8",
											"description": "(Required) ID of user"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 44250960,\n \"message\": \"qui cupidatat esse reprehenderit\"\n}"
						},
						{
							"name": "unexpected error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/:userId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										":userId"
									],
									"variable": [
										{
											"key": "userId",
											"value": "urn:uuid:0dcea8f3-1851-bfa8-810c-a681b53532b8",
											"description": "(Required) ID of user"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 44250960,\n \"message\": \"qui cupidatat esse reprehenderit\"\n}"
						}
					]
				},
				{
					"name": "Logout",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/auth/api/v1/logout",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"api",
								"v1",
								"logout"
							]
						}
					},
					"response": [
						{
							"name": "successfull response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/logout",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"logout"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "unexpected error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/logout",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"logout"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 7570250,\n \"message\": \"ad dolor\"\n}"
						}
					]
				}
			]
		},
		{
			"name": "User2",
			"item": [
				{
					"name": "Register",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"const schema = {",
									"    \"type\": \"object\",",
									"    \"properties\": {",
									"        \"id\": {",
									"            \"type\": \"string\"",
									"        }",
									"    },",
									"    \"required\": [\"id\"]",
									"};",
									"",
									"pm.test('Response schema is valid', function() {",
									"    pm.response.to.have.jsonSchema(schema);",
									"});",
									"",
									"var responseJSON = JSON.parse(responseBody)",
									"pm.collectionVariables.set(\"userId2\", responseJSON[\"id\"])",
									"",
									"pm.test('Users have different id', function() {",
									"    pm.expect(responseJSON[\"id\"]).to.not.eql(pm.collectionVariables.get(\"userId\"))",
									"})"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"login2\", pm.variables.replaceIn('{{$randomUserName}}'))",
									"pm.collectionVariables.set(\"password2\", pm.variables.replaceIn('{{$randomPassword}}'))"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"login\": \"{{login2}}\",\n    \"password\": \"{{password2}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/auth/api/v1/register",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"api",
								"v1",
								"register"
							]
						}
					},
					"response": [
						{
							"name": "successfull response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"login\": \"user1\",\n    \"password\": \"user1-pwd\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/register",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"register"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"urn:uuid:75f05586-ccca-6fb5-cfce-373267b7ab4f\"\n}"
						},
						{
							"name": "unexpected error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"login\": \"user1\",\n    \"password\": \"user1-pwd\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/register",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"register"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 7570250,\n \"message\": \"ad dolor\"\n}"
						}
					]
				},
				{
					"name": "Login user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"login\": \"{{login2}}\",\n    \"password\": \"{{password2}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/auth/api/v1/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"api",
								"v1",
								"login"
							]
						}
					},
					"response": [
						{
							"name": "successfull response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"login\": \"user1\",\n    \"password\": \"user1-pwd\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"login"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "bad request",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"login\": \"user1\",\n    \"password\": \"user1-pwd\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"login"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "unexpected error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"login\": \"user1\",\n    \"password\": \"user1-pwd\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/login",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"login"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 7570250,\n \"message\": \"ad dolor\"\n}"
						}
					]
				},
				{
					"name": "Get user1 profile",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseUrl}}/user/api/v1/user/:userId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"api",
								"v1",
								"user",
								":userId"
							],
							"variable": [
								{
									"key": "userId",
									"value": "{{userId}}",
									"description": "(Required) ID of user"
								}
							]
						}
					},
					"response": [
						{
							"name": "user response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/:userId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										":userId"
									],
									"variable": [
										{
											"key": "userId",
											"value": "urn:uuid:0dcea8f3-1851-bfa8-810c-a681b53532b8",
											"description": "(Required) ID of user"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"id\": \"16211162-809a-be7a-f035-f6c1446a0ace\",\n \"login\": \"in occaecat Ut con\",\n \"firstName\": \"laborum consectetur\",\n \"lastName\": \"ullamco occaecat nostrud ut\",\n \"email\": \"0fpTANSpQ@JjUAxIHyYVMxeQmjOkmcHuFxBqaWf.ryu\",\n \"phone\": \"commodo cillum nisi\"\n}"
						},
						{
							"name": "forbidden response",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/:userId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										":userId"
									],
									"variable": [
										{
											"key": "userId",
											"value": "urn:uuid:0dcea8f3-1851-bfa8-810c-a681b53532b8",
											"description": "(Required) ID of user"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 44250960,\n \"message\": \"qui cupidatat esse reprehenderit\"\n}"
						},
						{
							"name": "unexpected error",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/:userId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										":userId"
									],
									"variable": [
										{
											"key": "userId",
											"value": "urn:uuid:0dcea8f3-1851-bfa8-810c-a681b53532b8",
											"description": "(Required) ID of user"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 44250960,\n \"message\": \"qui cupidatat esse reprehenderit\"\n}"
						}
					]
				},
				{
					"name": "Update user1 profile",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"firstName\", pm.variables.replaceIn('{{$randomFirstName}}'))",
									"pm.collectionVariables.set(\"lastName\", pm.variables.replaceIn('{{$randomLastName}}'))",
									"pm.collectionVariables.set(\"email\", pm.variables.replaceIn('{{$randomEmail}}'))",
									"pm.collectionVariables.set(\"phone\", pm.variables.replaceIn('{{$randomPhoneNumber}}'))"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"New name\",\n    \"lastName\": \"New lastname\",\n    \"email\": \"new@email.com\",\n    \"phone\": \"+71004242424\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/user/api/v1/user/:userId",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"api",
								"v1",
								"user",
								":userId"
							],
							"variable": [
								{
									"key": "userId",
									"value": "{{userId}}",
									"description": "(Required) ID of user"
								}
							]
						}
					},
					"response": [
						{
							"name": "user updated",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"firstName\": \"Julie\",\n    \"lastName\": \"Doe\",\n    \"email\": \"bestjohn@doe.com\",\n    \"phone\": \"+71004242424\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/:userId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										":userId"
									],
									"variable": [
										{
											"key": "userId",
											"value": "urn:uuid:0dcea8f3-1851-bfa8-810c-a681b53532b8",
											"description": "(Required) ID of user"
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "forbidden response",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"firstName\": \"Julie\",\n    \"lastName\": \"Doe\",\n    \"email\": \"bestjohn@doe.com\",\n    \"phone\": \"+71004242424\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/:userId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										":userId"
									],
									"variable": [
										{
											"key": "userId",
											"value": "urn:uuid:0dcea8f3-1851-bfa8-810c-a681b53532b8",
											"description": "(Required) ID of user"
										}
									]
								}
							},
							"status": "Forbidden",
							"code": 403,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 44250960,\n \"message\": \"qui cupidatat esse reprehenderit\"\n}"
						},
						{
							"name": "unexpected error",
							"originalRequest": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"firstName\": \"Julie\",\n    \"lastName\": \"Doe\",\n    \"email\": \"bestjohn@doe.com\",\n    \"phone\": \"+71004242424\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/api/v1/user/:userId",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"user",
										":userId"
									],
									"variable": [
										{
											"key": "userId",
											"value": "urn:uuid:0dcea8f3-1851-bfa8-810c-a681b53532b8",
											"description": "(Required) ID of user"
										}
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 44250960,\n \"message\": \"qui cupidatat esse reprehenderit\"\n}"
						}
					]
				},
				{
					"name": "Logout",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/auth/api/v1/logout",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"api",
								"v1",
								"logout"
							]
						}
					},
					"response": [
						{
							"name": "successfull response",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/logout",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"logout"
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "unexpected error",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/api/v1/logout",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"api",
										"v1",
										"logout"
									]
								}
							},
							"status": "Internal Server Error",
							"code": 500,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n \"code\": 7570250,\n \"message\": \"ad dolor\"\n}"
						}
					]
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"logWithIndent = function(str, indent) {",
					"    fixedStr = ''",
					"    for (const ln of str.split(\"\\n\"))",
					"    {",
					"        if (fixedStr != '')",
					"        {",
					"            fixedStr += \"\\n\" + indent",
					"        }",
					"        fixedStr += ln",
					"    }",
					"    tests[fixedStr] = true",
					"}",
					"",
					"logWithIndent(\"Request params: \\n\" + (typeof request.data === 'string' ? request.data : ''), \"\\t\")",
					"logWithIndent(\"Response: \\n\" + responseBody, \"\\t\")"
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "arch.homework"
		},
		{
			"key": "login",
			"value": ""
		},
		{
			"key": "password",
			"value": ""
		},
		{
			"key": "userId",
			"value": ""
		},
		{
			"key": "firstName",
			"value": ""
		},
		{
			"key": "lastName",
			"value": ""
		},
		{
			"key": "email",
			"value": ""
		},
		{
			"key": "phone",
			"value": ""
		},
		{
			"key": "login2",
			"value": ""
		},
		{
			"key": "password2",
			"value": ""
		},
		{
			"key": "userId2",
			"value": ""
		}
	]
}